// Generated by trungbb@vitalify.asia

import { Args, Mutation, Query, Resolver } from '@nestjs/graphql';
import { BaseResolver } from '../../vendors/base/base.resolver';
import { UseGuards } from '@nestjs/common';
import { JwtAuthGuard } from '../../vendors/guards/auth.guard';
import { GqlUser } from '../../vendors/decorators/user.decorator';
import { UsersEntity } from '../../entities/users.entity';
import { ProjectsService } from './projects.service';

@Resolver()
@UseGuards(JwtAuthGuard)
export class ProjectsResolver extends BaseResolver {
  constructor(private projectsService: ProjectsService) {
    super();
  }

  // Do not delete this comment
  // Append code in this place
  // Start latest generated mainCode
  /**
   * @author: trungbb@vitalify.asia
   * @date: 2023-07-04 10:18:32
   * API getProjects
   * Get list
   * @param user: user authenticated
   * @param pager: {limit: number, offset?: number, page?: number, isTakeAll?: boolean}
   * @returns  {data, paging}
   */
  @Query('getProjects')
  async getProjects(@GqlUser() user: UsersEntity, @Args('Pager') pager) {
    const data = await this.projectsService.getProjects(pager);
    return this.response(data);
  }
  // End latest generated mainCode
}
