// Generated by thanhld@vitalify.asia

import { Args, Mutation, Query, Resolver } from '@nestjs/graphql';
import { BaseResolver } from '../../vendors/base/base.resolver';
import { UseGuards } from '@nestjs/common';
import { JwtAuthGuard } from '../../vendors/guards/auth.guard';
import { GqlUser } from '../../vendors/decorators/user.decorator';
import { UsersEntity } from '../../entities/users.entity';
import { UsersDevicesService } from './users_devices.service';
// Do not delete this comment
// Append importDto in this place
// Start latest generated importDto
import { AddDeviceDto } from './dto/addDevice.dto';

// End latest generated importDto

@Resolver()
@UseGuards(JwtAuthGuard)
export class UsersDevicesResolver extends BaseResolver {
  constructor(private usersDevicesService: UsersDevicesService) {
    super();
  }

  // Do not delete this comment
  // Append code in this place
  // Start latest generated mainCode
  /**
   * @author: thanhld@vitalify.asia
   * @date: 2023-10-19 15:51:10
   * API addDevice
   * Add new record
   * @param user: user authenticated
   * @param params {"rentDate":"Date","returnDate":"Date","userId":"Int","deviceId":"Int"}
   * @returns new inserted record
   */
  @Mutation('addDevice')
  async addDevice(@GqlUser() user: UsersEntity, @Args('params') params: AddDeviceDto) {
    const data = await this.usersDevicesService.addDevice(params, user);
    return this.response(data);
  }
  // End latest generated mainCode
}
