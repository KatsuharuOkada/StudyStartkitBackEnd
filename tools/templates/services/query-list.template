  /**
   * @author: {{devName}}
   * @date: {{generatedDate}}
   * Method {{apiName}}
   * Get list
   * @param pager: {limit: number, offset?: number, page?: number, isTakeAll?: boolean}
   * @param filterConditions: JSON Object
   * @param orderConditions: JSON Object
   * @returns {data, paging}
   */
  async {{apiName}}(pager, filterConditions: object = undefined, orderConditions: object = undefined) {
    const queryBuilder = this.{{lowerCaseName}}Repository
      .createQueryBuilder(this.entityAlias)
      {{importJoin}}
      {{importSelect}}
    if (!_.isEmpty(filterConditions)) {
      // add filters condition here
    }
    if (!_.isEmpty(orderConditions)) {
      // add orders condition here
    }
    // pass final queryBuilder here to paging
    const [data, paging] = await queryBuilder.paginate(pager, filterConditions, orderConditions);
    // parse result as paging result
    return { data, paging };
  }